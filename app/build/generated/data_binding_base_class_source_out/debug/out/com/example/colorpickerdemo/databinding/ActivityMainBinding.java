// Generated by data binding compiler. Do not edit!
package com.example.colorpickerdemo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.colorpickerdemo.ColorPickerView;
import com.example.colorpickerdemo.ColorPickerViewModel;
import com.example.colorpickerdemo.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityMainBinding extends ViewDataBinding {
  @NonNull
  public final SeekBar brightnessSeekBar;

  @NonNull
  public final ColorPickerView colorPickerView;

  @NonNull
  public final LinearLayout customView1;

  @NonNull
  public final LinearLayout customView2;

  @NonNull
  public final LinearLayout customView3;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final LinearLayout mainColorPicker;

  @NonNull
  public final LinearLayout mainCustomView;

  @NonNull
  public final ShapeableImageView sivFirstView;

  @NonNull
  public final ShapeableImageView sivSecondView;

  @NonNull
  public final ShapeableImageView sivThirdView;

  @NonNull
  public final TextView txtBrightness;

  @NonNull
  public final TextView txtPercentage;

  @Bindable
  protected ColorPickerViewModel mViewModel;

  protected ActivityMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      SeekBar brightnessSeekBar, ColorPickerView colorPickerView, LinearLayout customView1,
      LinearLayout customView2, LinearLayout customView3, ConstraintLayout main,
      LinearLayout mainColorPicker, LinearLayout mainCustomView, ShapeableImageView sivFirstView,
      ShapeableImageView sivSecondView, ShapeableImageView sivThirdView, TextView txtBrightness,
      TextView txtPercentage) {
    super(_bindingComponent, _root, _localFieldCount);
    this.brightnessSeekBar = brightnessSeekBar;
    this.colorPickerView = colorPickerView;
    this.customView1 = customView1;
    this.customView2 = customView2;
    this.customView3 = customView3;
    this.main = main;
    this.mainColorPicker = mainColorPicker;
    this.mainCustomView = mainCustomView;
    this.sivFirstView = sivFirstView;
    this.sivSecondView = sivSecondView;
    this.sivThirdView = sivThirdView;
    this.txtBrightness = txtBrightness;
    this.txtPercentage = txtPercentage;
  }

  public abstract void setViewModel(@Nullable ColorPickerViewModel viewModel);

  @Nullable
  public ColorPickerViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, null, false, component);
  }

  public static ActivityMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMainBinding)bind(component, view, R.layout.activity_main);
  }
}
